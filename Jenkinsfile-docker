pipeline {
    agent { label 'master' }
    parameters {
       validatingString(name: 'URL', defaultValue: 'https://github.com/balaant/test-python', regex: /((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[\w]*))?)/,  description: 'Ссылка на гитхаб')
       choice(name: 'Lab', choices: ['1','2','3'], description:  'Номер лабы')
       validatingString(name: 'Name', defaultValue: '', description:  'ФИО', regex: /^[А-Я][а-я]+$/ )
       validatingString(name: 'Group', defaultValue: '', description:  'Группа', regex: /^[А-Я0-9]+\-[0-9А-Яа-я]+$/)
    }
    stages {
        stage("Build") {
            steps {
                echo "Set build name"
                sh "python3 /tests/logrez.py "+ params['Name']+" "+params['Lab']+" "+params['Group']+" "+params['URL']+" init"
                script {
                    currentBuild.displayName = params['Group'] + " " + params['Name'] + " Лаб" + params['Lab']
                }
            }
        }
        stage('prepare') {
            steps {
                script {
                    sh "rm -rf testLab"
                    sh "pwd"
                    sh "git clone ${params.URL} testLab"
                }
            }
        }
        stage('Codestyle') {
            steps {
                sh "sh /tests/checkstyle.sh testLab/Lab${params.Lab}"
            }
        }
        stage('Test') {
            steps {
                sh "cp /tests/TestLab${params.Lab}.py testLab/Lab${params.Lab}/"
                sh "python3 testLab/Lab${params.Lab}/TestLab${params.Lab}.py"
            }
        }

        stage('Log success') {
             steps {
                 sh "python3 /tests/logrez.py "+ params['Name']+" "+params['Lab']+" "+params['Group']+" "+params['URL']+" pass"
             }
        }
    }

}